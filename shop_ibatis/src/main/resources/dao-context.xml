<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-2.5.xsd
      http://www.springframework.org/schema/jee
      http://www.springframework.org/schema/jee/spring-jee-2.5.xsd">

	<!-- ***************************************************************************** -->
	<!-- This context file exists for developers to enter in their own configurations. -->
	<!-- ***************************************************************************** -->
	<!-- ******************************************************************** -->
	<!-- This context file was generated and is not intended to be changed manually. -->
	<!-- ******************************************************************** -->

	<!-- ******************************************************************** -->
	<!-- Scan for dao layer annotated beans -->
	<!-- ********************************************************************-->
	<context:component-scan base-package="com.dao" scoped-proxy="interfaces"/>

	<!-- ******************************************************************** -->
	<!-- Mark bean transactions as annotation driven -->
	<!-- ********************************************************************-->
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!-- ******************************************************************** -->
	<!-- PropertyConfigurer for jdbc -->
	<!-- ********************************************************************-->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>

	<!-- ******************************************************************** -->
	<!-- Setup the transaction manager -->
	<!-- ******************************************************************** -->

	    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
		<!-- Using Atomikos Transaction Manager 
		<bean class="com.atomikos.icatch.jta.UserTransactionManager" destroy-method="close" id="atomikosTransactionManager" init-method="init">
			<property name="forceShutdown" value="true"/>
			<property name="startupTransactionService" value="true"/>
			<property name="transactionTimeout" value="60"/>
		</bean>

		<bean class="com.atomikos.icatch.jta.UserTransactionImp" id="atomikosUserTransaction"/>
-->
		<!-- Configure the Spring framework to use JTA transactions from Atomikos
		<bean class="org.springframework.transaction.jta.JtaTransactionManager" id="transactionManager">
			<property name="transactionManager" ref="atomikosTransactionManager"/>
			<property name="userTransaction" ref="atomikosUserTransaction"/>
			<property name="transactionSynchronizationName" value="SYNCHRONIZATION_ON_ACTUAL_TRANSACTION"/>
		</bean>
-->
 	<!-- ******************************************************************** -->
	<!-- Setup a data source -->
	<!-- ******************************************************************** -->

		<!-- Using Apache DBCP Data Sources-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>



	<!-- ******************************************************************** -->
	<!-- Setup each persistence unit -->
	<!-- ******************************************************************** -->

		<!-- Configure a sqlMapClient-->
		<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
    	<property name="dataSource" ref="dataSource" />
    	<property name="configLocation" value="classpath:sqlMapConfig.xml" />
    </bean>


		<!-- EntityManager Factory that brings together the persistence unit, datasource, and JPA Vendor
		<bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="mySQLConnection">
			<property name="dataSource" ref="mySQLConnectionDS"/>
			<property name="persistenceUnitName" value="mySQLConnection"/>
			<property name="jpaVendorAdapter" ref="mySQLConnectionJPAVendorAdapter"/>
				<property name="jpaPropertyMap">
					<map>
								<entry key="hibernate.transaction.manager_lookup_class" value="com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup"/>
								<entry key="hibernate.connection.release_mode" value="on_close"/>
					</map>
				</property>
		</bean>
-->
</beans>